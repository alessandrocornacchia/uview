apiVersion: apps/v1
kind: Deployment
metadata:
  name: otelcollector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: otelcollector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: otelcollector
        app: otelcollector  # added alessandro
      annotations:
        prometheus.io/port: "8889"
        prometheus.io/path: "/metrics"
        prometheus.io/scrape_slow: "true"
    spec:
      containers:
      - name: otelcol
        args:
        - --config=/conf/collector.yaml
        image: otel/opentelemetry-collector-contrib # was without -contrib
        volumeMounts:
        - mountPath: /conf
          name: collector-config
      volumes:
      - configMap:
          items:
          - key: collector.yaml
            path: collector.yaml
          name: collector-config
        name: collector-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config
data:
  collector.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:

      # Dummy receiver that's never used, because a pipeline is required to have one.
      otlp/spanmetrics:
        protocols:
          grpc:
            endpoint: "localhost:12345"
            
    processors:
      batch:
      spanmetrics:
        metrics_exporter: prometheus

      probabilistic_sampler:
        hash_seed: 1000
        sampling_percentage: 100
      
      filter/1:
        spans:
          exclude:
            match_type: strict
            attributes:
            - key: "rpc.service"
              value: "grpc.health.v1.Health"

      filter/2:
        spans:
          exclude:
            match_type: strict
            span_names: 
              - "grpc.grpc.health.v1.Health/Check"
                    
    exporters:
      otlphttp:
        endpoint: "http://jaeger-collector.istio-system:4318"

      prometheus:
        endpoint: "0.0.0.0:8889"

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [probabilistic_sampler, filter/1, filter/2, spanmetrics, batch]
          exporters: [otlphttp]

        metrics:
          # Added to pass validation requiring at least one receiver in a pipeline.
          receivers: [otlp/spanmetrics]
          # The metrics_exporter must be present in this list.
          exporters: [prometheus]

---
apiVersion: v1
kind: Service
metadata:
  name: otelcollector
spec:
  ports:
  - name: grpc-otlp
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: prometheus
    port: 8889
    targetPort: 8889
    protocol: TCP
  selector:
    app.kubernetes.io/name: otelcollector
  type: ClusterIP