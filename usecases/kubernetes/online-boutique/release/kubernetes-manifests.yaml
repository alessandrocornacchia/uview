# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------
# WARNING: This file is autogenerated. Do not manually edit.
# ----------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: acornacchia/emailservice:v.0.3.5
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otelcollector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=emailservice,service.version=1.0.0"
          readinessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          livenessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          resources:
            requests:
              cpu: 200m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      # set node affinity to run on node not in "mcnode18" because exec format error (?????)
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.io/hostname"
                    operator: NotIn
                    values:
                      - mcnode18
      containers:
        - name: server
          image: acornacchia/adservice:v.0.3.5
          ports:
            - containerPort: 9555
          env:
            - name: PORT
              value: "9555"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otelcollector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=adservice,service.version=1.0.0"
          resources:
            requests:
              cpu: 300m #400
              memory: 250Mi #360Mi
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 15
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9555"]
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 15
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: acornacchia/productcatalogservice:v.0.3.5
          ports:
            - containerPort: 3550
          env:
            - name: PORT
              value: "3550"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otelcollector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=productcatalogservice,service.version=1.0.0"
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:3550"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:3550"]
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otelcollector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: otelcollector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: otelcollector
        app: otelcollector # added alessandro
      annotations:
        prometheus.io/port: "8889"
        prometheus.io/path: "/metrics"
        prometheus.io/scrape_slow: "true"
    spec:
      containers:
        - name: otelcol
          args:
            - --config=/conf/collector.yaml
          image: otel/opentelemetry-collector-contrib # was without -contrib
          volumeMounts:
            - mountPath: /conf
              name: collector-config
      volumes:
        - configMap:
            items:
              - key: collector.yaml
                path: collector.yaml
            name: collector-config
          name: collector-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
spec:
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: acornacchia/paymentservice:v.0.3.5
          ports:
            - containerPort: 50051
          env:
            - name: PORT
              value: "50051"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otelcollector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=paymentservice,service.version=1.0.0"
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      annotations:
        sidecar.istio.io/proxyCPU: "100m" # control istio proxy resource requests
        sidecar.istio.io/proxyCPULimit: "2000m" # control istio proxy resource requests
        sidecar.istio.io/proxyMemoryLimit: "1Gi" # control istio proxy resource requests
        sidecar.istio.io/proxyMemory: "100Mi" # control istio proxy resource requests
      labels:
        app: checkoutservice
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: acornacchia/checkoutservice:v.0.3.5
          ports:
            - containerPort: 5050
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
            - name: PORT
              value: "5050"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice:3550"
            - name: SHIPPING_SERVICE_ADDR
              value: "shippingservice:50051"
            - name: PAYMENT_SERVICE_ADDR
              value: "paymentservice:50051"
            - name: EMAIL_SERVICE_ADDR
              value: "emailservice:5000"
            - name: CURRENCY_SERVICE_ADDR
              value: "currencyservice:7000"
            - name: CART_SERVICE_ADDR
              value: "cartservice:7070"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otelcollector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=checkoutservice,service.version=1.0.0"
          resources:
            requests:
              cpu: 200m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      initContainers:
        - command:
            - /bin/sh
            - -exc
            - |
              echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if test $STATUSCODE -ne 200; then
                  echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
                  exit 1
              fi
          name: frontend-check
          image: busybox:latest
          env:
            - name: FRONTEND_ADDR
              value: "frontend:80"
      containers:
        - name: main
          image: acornacchia/loadgenerator:v.0.3.5
          volumeMounts:
            - mountPath: /loadgen
              name: locust
          env:
            - name: FRONTEND_ADDR
              value: "frontend:80"
            - name: USERS
              value: "20"
          resources: {}
      # here we add either the base or the spike configmap
      volumes:
        - name: locust
          configMap:
            name: locust-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: acornacchia/recommendationservice:v.0.3.5
          ports:
            - containerPort: 8080
          readinessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          livenessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:8080"]
          env:
            - name: PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice:3550"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otelcollector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=recommendationservice,service.version=1.0.0"
          resources:
            requests:
              cpu: 200m
              memory: 150Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
      annotations:
        sidecar.istio.io/proxyCPU: "100m" # control istio proxy resource requests
        sidecar.istio.io/proxyCPULimit: "2000m" # control istio proxy resource requests
        sidecar.istio.io/proxyMemoryLimit: "1Gi" # control istio proxy resource requests
        sidecar.istio.io/proxyMemory: "100Mi" # control istio proxy resource requests
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: acornacchia/currencyservice:v.0.3.5
          ports:
            - name: grpc
              containerPort: 7000
          env:
            - name: PORT
              value: "7000"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otelcollector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=currencyservice,service.version=1.0.0"
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:7000"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:7000"]
          resources:
            requests:
              cpu: 200m #100m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: acornacchia/cartservice:v0.3.6
          ports:
            - containerPort: 7070
          env:
            - name: REDIS_ADDR
              value: "redis-cart:6379"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://otelcollector:4317"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "http://productcatalogservice:3550"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=cartservice,service.version=1.0.0"
          resources:
            requests:
              cpu: 200m
              memory: 128Mi
          readinessProbe:
            initialDelaySeconds: 15
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 10
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
              #nodeSelector:
              #  kubernetes.io/hostname: mcnode19
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: acornacchia/frontend:v.0.3.5
          ports:
            - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-liveness-probe"
          env:
            - name: PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice:3550"
            - name: CURRENCY_SERVICE_ADDR
              value: "currencyservice:7000"
            - name: CART_SERVICE_ADDR
              value: "cartservice:7070"
            - name: RECOMMENDATION_SERVICE_ADDR
              value: "recommendationservice:8080"
            - name: SHIPPING_SERVICE_ADDR
              value: "shippingservice:50051"
            - name: CHECKOUT_SERVICE_ADDR
              value: "checkoutservice:5050"
            - name: AD_SERVICE_ADDR
              value: "adservice:9555"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otelcollector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=frontend,service.version=1.0.0"
          # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem, alibaba
          # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp 
          # - name: ENV_PLATFORM 
          #   value: "aws"
          # - name: CYMBAL_BRANDING
          #   value: "true"
          resources:
            requests:
              cpu: 1000m
              memory: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
      labels:
        app: redis-cart
    spec:
      containers:
        - name: redis
          image: redis:alpine
          command: ["redis-server"]
          args: ["/conf/redis.conf"]
          ports:
            - containerPort: 6379
          readinessProbe:
            periodSeconds: 5
            tcpSocket:
              port: 6379
          livenessProbe:
            periodSeconds: 5
            tcpSocket:
              port: 6379
          volumeMounts:
            - mountPath: /data
              name: redis-data
            - mountPath: /conf
              name: redis-conf
          resources:
            requests:
              cpu: 125m # 70m
              memory: 100Mi
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          securityContext:
            runAsUser: 59000
            runAsGroup: 59000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources: {}
          ports:
            - containerPort: 9121
      volumes:
        - name: redis-data
          emptyDir: {}
        - name: redis-conf
          configMap:
            name: redis-cluster-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: acornacchia/shippingservice:v.0.3.5
          ports:
            - containerPort: 50051
          env:
            - name: PORT
              value: "50051"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "http://otelcollector:4317"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=shippingservice,service.version=1.0.0"
          readinessProbe:
            periodSeconds: 5
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:50051"]
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
---
---
