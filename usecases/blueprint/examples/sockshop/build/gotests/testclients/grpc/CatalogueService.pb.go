// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: CatalogueService.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CatalogueService_OTServerWrapperInterface_AddSock_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sock     *CatalogueService_Sock `protobuf:"bytes,1,opt,name=sock,proto3" json:"sock,omitempty"`
	TraceCtx string                 `protobuf:"bytes,2,opt,name=traceCtx,proto3" json:"traceCtx,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_AddSock_Request) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_AddSock_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_AddSock_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_AddSock_Request) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_AddSock_Request) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_AddSock_Request.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_AddSock_Request) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{0}
}

func (x *CatalogueService_OTServerWrapperInterface_AddSock_Request) GetSock() *CatalogueService_Sock {
	if x != nil {
		return x.Sock
	}
	return nil
}

func (x *CatalogueService_OTServerWrapperInterface_AddSock_Request) GetTraceCtx() string {
	if x != nil {
		return x.TraceCtx
	}
	return ""
}

type CatalogueService_OTServerWrapperInterface_AddSock_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret0 string `protobuf:"bytes,1,opt,name=ret0,proto3" json:"ret0,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_AddSock_Response) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_AddSock_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_AddSock_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_AddSock_Response) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_AddSock_Response) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_AddSock_Response.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_AddSock_Response) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{1}
}

func (x *CatalogueService_OTServerWrapperInterface_AddSock_Response) GetRet0() string {
	if x != nil {
		return x.Ret0
	}
	return ""
}

type CatalogueService_OTServerWrapperInterface_AddTags_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags     []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	TraceCtx string   `protobuf:"bytes,2,opt,name=traceCtx,proto3" json:"traceCtx,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_AddTags_Request) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_AddTags_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_AddTags_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_AddTags_Request) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_AddTags_Request) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_AddTags_Request.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_AddTags_Request) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{2}
}

func (x *CatalogueService_OTServerWrapperInterface_AddTags_Request) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CatalogueService_OTServerWrapperInterface_AddTags_Request) GetTraceCtx() string {
	if x != nil {
		return x.TraceCtx
	}
	return ""
}

type CatalogueService_OTServerWrapperInterface_AddTags_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CatalogueService_OTServerWrapperInterface_AddTags_Response) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_AddTags_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_AddTags_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_AddTags_Response) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_AddTags_Response) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_AddTags_Response.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_AddTags_Response) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{3}
}

type CatalogueService_OTServerWrapperInterface_Count_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags     []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	TraceCtx string   `protobuf:"bytes,2,opt,name=traceCtx,proto3" json:"traceCtx,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_Count_Request) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_Count_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_Count_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_Count_Request) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_Count_Request) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_Count_Request.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_Count_Request) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{4}
}

func (x *CatalogueService_OTServerWrapperInterface_Count_Request) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CatalogueService_OTServerWrapperInterface_Count_Request) GetTraceCtx() string {
	if x != nil {
		return x.TraceCtx
	}
	return ""
}

type CatalogueService_OTServerWrapperInterface_Count_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret0 int64 `protobuf:"zigzag64,1,opt,name=ret0,proto3" json:"ret0,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_Count_Response) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_Count_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_Count_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_Count_Response) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_Count_Response) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_Count_Response.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_Count_Response) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{5}
}

func (x *CatalogueService_OTServerWrapperInterface_Count_Response) GetRet0() int64 {
	if x != nil {
		return x.Ret0
	}
	return 0
}

type CatalogueService_OTServerWrapperInterface_DeleteSock_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TraceCtx string `protobuf:"bytes,2,opt,name=traceCtx,proto3" json:"traceCtx,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_DeleteSock_Request) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_DeleteSock_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_DeleteSock_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_DeleteSock_Request) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_DeleteSock_Request) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_DeleteSock_Request.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_DeleteSock_Request) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{6}
}

func (x *CatalogueService_OTServerWrapperInterface_DeleteSock_Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CatalogueService_OTServerWrapperInterface_DeleteSock_Request) GetTraceCtx() string {
	if x != nil {
		return x.TraceCtx
	}
	return ""
}

type CatalogueService_OTServerWrapperInterface_DeleteSock_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CatalogueService_OTServerWrapperInterface_DeleteSock_Response) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_DeleteSock_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_DeleteSock_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_DeleteSock_Response) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_DeleteSock_Response) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_DeleteSock_Response.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_DeleteSock_Response) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{7}
}

type CatalogueService_OTServerWrapperInterface_Get_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TraceCtx string `protobuf:"bytes,2,opt,name=traceCtx,proto3" json:"traceCtx,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_Get_Request) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_Get_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_Get_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_Get_Request) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_Get_Request) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_Get_Request.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_Get_Request) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{8}
}

func (x *CatalogueService_OTServerWrapperInterface_Get_Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CatalogueService_OTServerWrapperInterface_Get_Request) GetTraceCtx() string {
	if x != nil {
		return x.TraceCtx
	}
	return ""
}

type CatalogueService_OTServerWrapperInterface_Get_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret0 *CatalogueService_Sock `protobuf:"bytes,1,opt,name=ret0,proto3" json:"ret0,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_Get_Response) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_Get_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_Get_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_Get_Response) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_Get_Response) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_Get_Response.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_Get_Response) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{9}
}

func (x *CatalogueService_OTServerWrapperInterface_Get_Response) GetRet0() *CatalogueService_Sock {
	if x != nil {
		return x.Ret0
	}
	return nil
}

type CatalogueService_OTServerWrapperInterface_List_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags     []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	Order    string   `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	PageNum  int64    `protobuf:"zigzag64,3,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int64    `protobuf:"zigzag64,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	TraceCtx string   `protobuf:"bytes,5,opt,name=traceCtx,proto3" json:"traceCtx,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_List_Request) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_List_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_List_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_List_Request) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_List_Request) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_List_Request.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_List_Request) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{10}
}

func (x *CatalogueService_OTServerWrapperInterface_List_Request) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CatalogueService_OTServerWrapperInterface_List_Request) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *CatalogueService_OTServerWrapperInterface_List_Request) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *CatalogueService_OTServerWrapperInterface_List_Request) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CatalogueService_OTServerWrapperInterface_List_Request) GetTraceCtx() string {
	if x != nil {
		return x.TraceCtx
	}
	return ""
}

type CatalogueService_OTServerWrapperInterface_List_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret0 []*CatalogueService_Sock `protobuf:"bytes,1,rep,name=ret0,proto3" json:"ret0,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_List_Response) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_List_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_List_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_List_Response) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_List_Response) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_List_Response.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_List_Response) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{11}
}

func (x *CatalogueService_OTServerWrapperInterface_List_Response) GetRet0() []*CatalogueService_Sock {
	if x != nil {
		return x.Ret0
	}
	return nil
}

type CatalogueService_OTServerWrapperInterface_Tags_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceCtx string `protobuf:"bytes,1,opt,name=traceCtx,proto3" json:"traceCtx,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_Tags_Request) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_Tags_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_Tags_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_Tags_Request) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_Tags_Request) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_Tags_Request.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_Tags_Request) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{12}
}

func (x *CatalogueService_OTServerWrapperInterface_Tags_Request) GetTraceCtx() string {
	if x != nil {
		return x.TraceCtx
	}
	return ""
}

type CatalogueService_OTServerWrapperInterface_Tags_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret0 []string `protobuf:"bytes,1,rep,name=ret0,proto3" json:"ret0,omitempty"`
}

func (x *CatalogueService_OTServerWrapperInterface_Tags_Response) Reset() {
	*x = CatalogueService_OTServerWrapperInterface_Tags_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_OTServerWrapperInterface_Tags_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_OTServerWrapperInterface_Tags_Response) ProtoMessage() {}

func (x *CatalogueService_OTServerWrapperInterface_Tags_Response) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_OTServerWrapperInterface_Tags_Response.ProtoReflect.Descriptor instead.
func (*CatalogueService_OTServerWrapperInterface_Tags_Response) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{13}
}

func (x *CatalogueService_OTServerWrapperInterface_Tags_Response) GetRet0() []string {
	if x != nil {
		return x.Ret0
	}
	return nil
}

type CatalogueService_Sock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	ImageURL    []string `protobuf:"bytes,4,rep,name=ImageURL,proto3" json:"ImageURL,omitempty"`
	ImageURL_1  string   `protobuf:"bytes,5,opt,name=ImageURL_1,json=ImageURL1,proto3" json:"ImageURL_1,omitempty"`
	ImageURL_2  string   `protobuf:"bytes,6,opt,name=ImageURL_2,json=ImageURL2,proto3" json:"ImageURL_2,omitempty"`
	Price       float32  `protobuf:"fixed32,7,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity    int64    `protobuf:"zigzag64,8,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Tags        []string `protobuf:"bytes,9,rep,name=Tags,proto3" json:"Tags,omitempty"`
	TagString   string   `protobuf:"bytes,10,opt,name=TagString,proto3" json:"TagString,omitempty"`
}

func (x *CatalogueService_Sock) Reset() {
	*x = CatalogueService_Sock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CatalogueService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogueService_Sock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogueService_Sock) ProtoMessage() {}

func (x *CatalogueService_Sock) ProtoReflect() protoreflect.Message {
	mi := &file_CatalogueService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogueService_Sock.ProtoReflect.Descriptor instead.
func (*CatalogueService_Sock) Descriptor() ([]byte, []int) {
	return file_CatalogueService_proto_rawDescGZIP(), []int{14}
}

func (x *CatalogueService_Sock) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CatalogueService_Sock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CatalogueService_Sock) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CatalogueService_Sock) GetImageURL() []string {
	if x != nil {
		return x.ImageURL
	}
	return nil
}

func (x *CatalogueService_Sock) GetImageURL_1() string {
	if x != nil {
		return x.ImageURL_1
	}
	return ""
}

func (x *CatalogueService_Sock) GetImageURL_2() string {
	if x != nil {
		return x.ImageURL_2
	}
	return ""
}

func (x *CatalogueService_Sock) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CatalogueService_Sock) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CatalogueService_Sock) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CatalogueService_Sock) GetTagString() string {
	if x != nil {
		return x.TagString
	}
	return ""
}

var File_CatalogueService_proto protoreflect.FileDescriptor

var file_CatalogueService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0x88,
	0x01, 0x0a, 0x39, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x41, 0x64, 0x64,
	0x53, 0x6f, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04,
	0x73, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x53, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x73, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x74, 0x78, 0x22, 0x50, 0x0a, 0x3a, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x63, 0x6b, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x74, 0x30, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x74, 0x30, 0x22, 0x6b, 0x0a, 0x39, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x74, 0x78, 0x22, 0x3c, 0x0a, 0x3a, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x37, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x74,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x74,
	0x78, 0x22, 0x4e, 0x0a, 0x38, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x65, 0x74, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x72, 0x65, 0x74,
	0x30, 0x22, 0x6a, 0x0a, 0x3c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x74, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x74, 0x78, 0x22, 0x3f, 0x0a,
	0x3d, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x6f, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63,
	0x0a, 0x35, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x74, 0x78, 0x22, 0x69, 0x0a, 0x36, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x47, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x04, 0x72, 0x65, 0x74, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x53, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x72, 0x65, 0x74, 0x30, 0x22, 0xb4,
	0x01, 0x0a, 0x36, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x4c, 0x69, 0x73,
	0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x43, 0x74, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x43, 0x74, 0x78, 0x22, 0x6a, 0x0a, 0x37, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x04, 0x72, 0x65, 0x74, 0x30, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x53, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x72, 0x65, 0x74,
	0x30, 0x22, 0x54, 0x0a, 0x36, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x54,
	0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x43, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x43, 0x74, 0x78, 0x22, 0x4d, 0x0a, 0x37, 0x43, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x74, 0x30, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x65, 0x74, 0x30, 0x22, 0x9b, 0x02, 0x0a, 0x15, 0x43, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x53, 0x6f, 0x63, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x52, 0x4c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x52, 0x4c, 0x12, 0x1d, 0x0a, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x5f, 0x31,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c,
	0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x5f, 0x32, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x67, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x32, 0x87, 0x08, 0x0a, 0x29, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x63, 0x6b, 0x12, 0x3f,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x41, 0x64, 0x64, 0x53, 0x6f, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x40, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x3f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x40, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x97, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x12, 0x42,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x43, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x3b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x47, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85,
	0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x3c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x4f, 0x54, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x54,
	0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_CatalogueService_proto_rawDescOnce sync.Once
	file_CatalogueService_proto_rawDescData = file_CatalogueService_proto_rawDesc
)

func file_CatalogueService_proto_rawDescGZIP() []byte {
	file_CatalogueService_proto_rawDescOnce.Do(func() {
		file_CatalogueService_proto_rawDescData = protoimpl.X.CompressGZIP(file_CatalogueService_proto_rawDescData)
	})
	return file_CatalogueService_proto_rawDescData
}

var file_CatalogueService_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_CatalogueService_proto_goTypes = []interface{}{
	(*CatalogueService_OTServerWrapperInterface_AddSock_Request)(nil),     // 0: grpc.CatalogueService_OTServerWrapperInterface_AddSock_Request
	(*CatalogueService_OTServerWrapperInterface_AddSock_Response)(nil),    // 1: grpc.CatalogueService_OTServerWrapperInterface_AddSock_Response
	(*CatalogueService_OTServerWrapperInterface_AddTags_Request)(nil),     // 2: grpc.CatalogueService_OTServerWrapperInterface_AddTags_Request
	(*CatalogueService_OTServerWrapperInterface_AddTags_Response)(nil),    // 3: grpc.CatalogueService_OTServerWrapperInterface_AddTags_Response
	(*CatalogueService_OTServerWrapperInterface_Count_Request)(nil),       // 4: grpc.CatalogueService_OTServerWrapperInterface_Count_Request
	(*CatalogueService_OTServerWrapperInterface_Count_Response)(nil),      // 5: grpc.CatalogueService_OTServerWrapperInterface_Count_Response
	(*CatalogueService_OTServerWrapperInterface_DeleteSock_Request)(nil),  // 6: grpc.CatalogueService_OTServerWrapperInterface_DeleteSock_Request
	(*CatalogueService_OTServerWrapperInterface_DeleteSock_Response)(nil), // 7: grpc.CatalogueService_OTServerWrapperInterface_DeleteSock_Response
	(*CatalogueService_OTServerWrapperInterface_Get_Request)(nil),         // 8: grpc.CatalogueService_OTServerWrapperInterface_Get_Request
	(*CatalogueService_OTServerWrapperInterface_Get_Response)(nil),        // 9: grpc.CatalogueService_OTServerWrapperInterface_Get_Response
	(*CatalogueService_OTServerWrapperInterface_List_Request)(nil),        // 10: grpc.CatalogueService_OTServerWrapperInterface_List_Request
	(*CatalogueService_OTServerWrapperInterface_List_Response)(nil),       // 11: grpc.CatalogueService_OTServerWrapperInterface_List_Response
	(*CatalogueService_OTServerWrapperInterface_Tags_Request)(nil),        // 12: grpc.CatalogueService_OTServerWrapperInterface_Tags_Request
	(*CatalogueService_OTServerWrapperInterface_Tags_Response)(nil),       // 13: grpc.CatalogueService_OTServerWrapperInterface_Tags_Response
	(*CatalogueService_Sock)(nil),                                         // 14: grpc.CatalogueService_Sock
}
var file_CatalogueService_proto_depIdxs = []int32{
	14, // 0: grpc.CatalogueService_OTServerWrapperInterface_AddSock_Request.sock:type_name -> grpc.CatalogueService_Sock
	14, // 1: grpc.CatalogueService_OTServerWrapperInterface_Get_Response.ret0:type_name -> grpc.CatalogueService_Sock
	14, // 2: grpc.CatalogueService_OTServerWrapperInterface_List_Response.ret0:type_name -> grpc.CatalogueService_Sock
	0,  // 3: grpc.CatalogueService_OTServerWrapperInterface.AddSock:input_type -> grpc.CatalogueService_OTServerWrapperInterface_AddSock_Request
	2,  // 4: grpc.CatalogueService_OTServerWrapperInterface.AddTags:input_type -> grpc.CatalogueService_OTServerWrapperInterface_AddTags_Request
	4,  // 5: grpc.CatalogueService_OTServerWrapperInterface.Count:input_type -> grpc.CatalogueService_OTServerWrapperInterface_Count_Request
	6,  // 6: grpc.CatalogueService_OTServerWrapperInterface.DeleteSock:input_type -> grpc.CatalogueService_OTServerWrapperInterface_DeleteSock_Request
	8,  // 7: grpc.CatalogueService_OTServerWrapperInterface.Get:input_type -> grpc.CatalogueService_OTServerWrapperInterface_Get_Request
	10, // 8: grpc.CatalogueService_OTServerWrapperInterface.List:input_type -> grpc.CatalogueService_OTServerWrapperInterface_List_Request
	12, // 9: grpc.CatalogueService_OTServerWrapperInterface.Tags:input_type -> grpc.CatalogueService_OTServerWrapperInterface_Tags_Request
	1,  // 10: grpc.CatalogueService_OTServerWrapperInterface.AddSock:output_type -> grpc.CatalogueService_OTServerWrapperInterface_AddSock_Response
	3,  // 11: grpc.CatalogueService_OTServerWrapperInterface.AddTags:output_type -> grpc.CatalogueService_OTServerWrapperInterface_AddTags_Response
	5,  // 12: grpc.CatalogueService_OTServerWrapperInterface.Count:output_type -> grpc.CatalogueService_OTServerWrapperInterface_Count_Response
	7,  // 13: grpc.CatalogueService_OTServerWrapperInterface.DeleteSock:output_type -> grpc.CatalogueService_OTServerWrapperInterface_DeleteSock_Response
	9,  // 14: grpc.CatalogueService_OTServerWrapperInterface.Get:output_type -> grpc.CatalogueService_OTServerWrapperInterface_Get_Response
	11, // 15: grpc.CatalogueService_OTServerWrapperInterface.List:output_type -> grpc.CatalogueService_OTServerWrapperInterface_List_Response
	13, // 16: grpc.CatalogueService_OTServerWrapperInterface.Tags:output_type -> grpc.CatalogueService_OTServerWrapperInterface_Tags_Response
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_CatalogueService_proto_init() }
func file_CatalogueService_proto_init() {
	if File_CatalogueService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_CatalogueService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_AddSock_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_AddSock_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_AddTags_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_AddTags_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_Count_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_Count_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_DeleteSock_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_DeleteSock_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_Get_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_Get_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_List_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_List_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_Tags_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_OTServerWrapperInterface_Tags_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CatalogueService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogueService_Sock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CatalogueService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_CatalogueService_proto_goTypes,
		DependencyIndexes: file_CatalogueService_proto_depIdxs,
		MessageInfos:      file_CatalogueService_proto_msgTypes,
	}.Build()
	File_CatalogueService_proto = out.File
	file_CatalogueService_proto_rawDesc = nil
	file_CatalogueService_proto_goTypes = nil
	file_CatalogueService_proto_depIdxs = nil
}
