// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: UserService.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UserService_OTServerWrapperInterfaceClient is the client API for UserService_OTServerWrapperInterface service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserService_OTServerWrapperInterfaceClient interface {
	Delete(ctx context.Context, in *UserService_OTServerWrapperInterface_Delete_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_Delete_Response, error)
	GetAddresses(ctx context.Context, in *UserService_OTServerWrapperInterface_GetAddresses_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_GetAddresses_Response, error)
	GetCards(ctx context.Context, in *UserService_OTServerWrapperInterface_GetCards_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_GetCards_Response, error)
	GetUsers(ctx context.Context, in *UserService_OTServerWrapperInterface_GetUsers_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_GetUsers_Response, error)
	Login(ctx context.Context, in *UserService_OTServerWrapperInterface_Login_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_Login_Response, error)
	PostAddress(ctx context.Context, in *UserService_OTServerWrapperInterface_PostAddress_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_PostAddress_Response, error)
	PostCard(ctx context.Context, in *UserService_OTServerWrapperInterface_PostCard_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_PostCard_Response, error)
	PostUser(ctx context.Context, in *UserService_OTServerWrapperInterface_PostUser_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_PostUser_Response, error)
	Register(ctx context.Context, in *UserService_OTServerWrapperInterface_Register_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_Register_Response, error)
}

type userService_OTServerWrapperInterfaceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserService_OTServerWrapperInterfaceClient(cc grpc.ClientConnInterface) UserService_OTServerWrapperInterfaceClient {
	return &userService_OTServerWrapperInterfaceClient{cc}
}

func (c *userService_OTServerWrapperInterfaceClient) Delete(ctx context.Context, in *UserService_OTServerWrapperInterface_Delete_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_Delete_Response, error) {
	out := new(UserService_OTServerWrapperInterface_Delete_Response)
	err := c.cc.Invoke(ctx, "/grpc.UserService_OTServerWrapperInterface/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userService_OTServerWrapperInterfaceClient) GetAddresses(ctx context.Context, in *UserService_OTServerWrapperInterface_GetAddresses_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_GetAddresses_Response, error) {
	out := new(UserService_OTServerWrapperInterface_GetAddresses_Response)
	err := c.cc.Invoke(ctx, "/grpc.UserService_OTServerWrapperInterface/GetAddresses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userService_OTServerWrapperInterfaceClient) GetCards(ctx context.Context, in *UserService_OTServerWrapperInterface_GetCards_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_GetCards_Response, error) {
	out := new(UserService_OTServerWrapperInterface_GetCards_Response)
	err := c.cc.Invoke(ctx, "/grpc.UserService_OTServerWrapperInterface/GetCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userService_OTServerWrapperInterfaceClient) GetUsers(ctx context.Context, in *UserService_OTServerWrapperInterface_GetUsers_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_GetUsers_Response, error) {
	out := new(UserService_OTServerWrapperInterface_GetUsers_Response)
	err := c.cc.Invoke(ctx, "/grpc.UserService_OTServerWrapperInterface/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userService_OTServerWrapperInterfaceClient) Login(ctx context.Context, in *UserService_OTServerWrapperInterface_Login_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_Login_Response, error) {
	out := new(UserService_OTServerWrapperInterface_Login_Response)
	err := c.cc.Invoke(ctx, "/grpc.UserService_OTServerWrapperInterface/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userService_OTServerWrapperInterfaceClient) PostAddress(ctx context.Context, in *UserService_OTServerWrapperInterface_PostAddress_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_PostAddress_Response, error) {
	out := new(UserService_OTServerWrapperInterface_PostAddress_Response)
	err := c.cc.Invoke(ctx, "/grpc.UserService_OTServerWrapperInterface/PostAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userService_OTServerWrapperInterfaceClient) PostCard(ctx context.Context, in *UserService_OTServerWrapperInterface_PostCard_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_PostCard_Response, error) {
	out := new(UserService_OTServerWrapperInterface_PostCard_Response)
	err := c.cc.Invoke(ctx, "/grpc.UserService_OTServerWrapperInterface/PostCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userService_OTServerWrapperInterfaceClient) PostUser(ctx context.Context, in *UserService_OTServerWrapperInterface_PostUser_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_PostUser_Response, error) {
	out := new(UserService_OTServerWrapperInterface_PostUser_Response)
	err := c.cc.Invoke(ctx, "/grpc.UserService_OTServerWrapperInterface/PostUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userService_OTServerWrapperInterfaceClient) Register(ctx context.Context, in *UserService_OTServerWrapperInterface_Register_Request, opts ...grpc.CallOption) (*UserService_OTServerWrapperInterface_Register_Response, error) {
	out := new(UserService_OTServerWrapperInterface_Register_Response)
	err := c.cc.Invoke(ctx, "/grpc.UserService_OTServerWrapperInterface/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserService_OTServerWrapperInterfaceServer is the server API for UserService_OTServerWrapperInterface service.
// All implementations must embed UnimplementedUserService_OTServerWrapperInterfaceServer
// for forward compatibility
type UserService_OTServerWrapperInterfaceServer interface {
	Delete(context.Context, *UserService_OTServerWrapperInterface_Delete_Request) (*UserService_OTServerWrapperInterface_Delete_Response, error)
	GetAddresses(context.Context, *UserService_OTServerWrapperInterface_GetAddresses_Request) (*UserService_OTServerWrapperInterface_GetAddresses_Response, error)
	GetCards(context.Context, *UserService_OTServerWrapperInterface_GetCards_Request) (*UserService_OTServerWrapperInterface_GetCards_Response, error)
	GetUsers(context.Context, *UserService_OTServerWrapperInterface_GetUsers_Request) (*UserService_OTServerWrapperInterface_GetUsers_Response, error)
	Login(context.Context, *UserService_OTServerWrapperInterface_Login_Request) (*UserService_OTServerWrapperInterface_Login_Response, error)
	PostAddress(context.Context, *UserService_OTServerWrapperInterface_PostAddress_Request) (*UserService_OTServerWrapperInterface_PostAddress_Response, error)
	PostCard(context.Context, *UserService_OTServerWrapperInterface_PostCard_Request) (*UserService_OTServerWrapperInterface_PostCard_Response, error)
	PostUser(context.Context, *UserService_OTServerWrapperInterface_PostUser_Request) (*UserService_OTServerWrapperInterface_PostUser_Response, error)
	Register(context.Context, *UserService_OTServerWrapperInterface_Register_Request) (*UserService_OTServerWrapperInterface_Register_Response, error)
	mustEmbedUnimplementedUserService_OTServerWrapperInterfaceServer()
}

// UnimplementedUserService_OTServerWrapperInterfaceServer must be embedded to have forward compatible implementations.
type UnimplementedUserService_OTServerWrapperInterfaceServer struct {
}

func (UnimplementedUserService_OTServerWrapperInterfaceServer) Delete(context.Context, *UserService_OTServerWrapperInterface_Delete_Request) (*UserService_OTServerWrapperInterface_Delete_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedUserService_OTServerWrapperInterfaceServer) GetAddresses(context.Context, *UserService_OTServerWrapperInterface_GetAddresses_Request) (*UserService_OTServerWrapperInterface_GetAddresses_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddresses not implemented")
}
func (UnimplementedUserService_OTServerWrapperInterfaceServer) GetCards(context.Context, *UserService_OTServerWrapperInterface_GetCards_Request) (*UserService_OTServerWrapperInterface_GetCards_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCards not implemented")
}
func (UnimplementedUserService_OTServerWrapperInterfaceServer) GetUsers(context.Context, *UserService_OTServerWrapperInterface_GetUsers_Request) (*UserService_OTServerWrapperInterface_GetUsers_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (UnimplementedUserService_OTServerWrapperInterfaceServer) Login(context.Context, *UserService_OTServerWrapperInterface_Login_Request) (*UserService_OTServerWrapperInterface_Login_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (UnimplementedUserService_OTServerWrapperInterfaceServer) PostAddress(context.Context, *UserService_OTServerWrapperInterface_PostAddress_Request) (*UserService_OTServerWrapperInterface_PostAddress_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostAddress not implemented")
}
func (UnimplementedUserService_OTServerWrapperInterfaceServer) PostCard(context.Context, *UserService_OTServerWrapperInterface_PostCard_Request) (*UserService_OTServerWrapperInterface_PostCard_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostCard not implemented")
}
func (UnimplementedUserService_OTServerWrapperInterfaceServer) PostUser(context.Context, *UserService_OTServerWrapperInterface_PostUser_Request) (*UserService_OTServerWrapperInterface_PostUser_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostUser not implemented")
}
func (UnimplementedUserService_OTServerWrapperInterfaceServer) Register(context.Context, *UserService_OTServerWrapperInterface_Register_Request) (*UserService_OTServerWrapperInterface_Register_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (UnimplementedUserService_OTServerWrapperInterfaceServer) mustEmbedUnimplementedUserService_OTServerWrapperInterfaceServer() {
}

// UnsafeUserService_OTServerWrapperInterfaceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserService_OTServerWrapperInterfaceServer will
// result in compilation errors.
type UnsafeUserService_OTServerWrapperInterfaceServer interface {
	mustEmbedUnimplementedUserService_OTServerWrapperInterfaceServer()
}

func RegisterUserService_OTServerWrapperInterfaceServer(s grpc.ServiceRegistrar, srv UserService_OTServerWrapperInterfaceServer) {
	s.RegisterService(&UserService_OTServerWrapperInterface_ServiceDesc, srv)
}

func _UserService_OTServerWrapperInterface_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserService_OTServerWrapperInterface_Delete_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserService_OTServerWrapperInterfaceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService_OTServerWrapperInterface/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserService_OTServerWrapperInterfaceServer).Delete(ctx, req.(*UserService_OTServerWrapperInterface_Delete_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_OTServerWrapperInterface_GetAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserService_OTServerWrapperInterface_GetAddresses_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserService_OTServerWrapperInterfaceServer).GetAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService_OTServerWrapperInterface/GetAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserService_OTServerWrapperInterfaceServer).GetAddresses(ctx, req.(*UserService_OTServerWrapperInterface_GetAddresses_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_OTServerWrapperInterface_GetCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserService_OTServerWrapperInterface_GetCards_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserService_OTServerWrapperInterfaceServer).GetCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService_OTServerWrapperInterface/GetCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserService_OTServerWrapperInterfaceServer).GetCards(ctx, req.(*UserService_OTServerWrapperInterface_GetCards_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_OTServerWrapperInterface_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserService_OTServerWrapperInterface_GetUsers_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserService_OTServerWrapperInterfaceServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService_OTServerWrapperInterface/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserService_OTServerWrapperInterfaceServer).GetUsers(ctx, req.(*UserService_OTServerWrapperInterface_GetUsers_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_OTServerWrapperInterface_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserService_OTServerWrapperInterface_Login_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserService_OTServerWrapperInterfaceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService_OTServerWrapperInterface/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserService_OTServerWrapperInterfaceServer).Login(ctx, req.(*UserService_OTServerWrapperInterface_Login_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_OTServerWrapperInterface_PostAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserService_OTServerWrapperInterface_PostAddress_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserService_OTServerWrapperInterfaceServer).PostAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService_OTServerWrapperInterface/PostAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserService_OTServerWrapperInterfaceServer).PostAddress(ctx, req.(*UserService_OTServerWrapperInterface_PostAddress_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_OTServerWrapperInterface_PostCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserService_OTServerWrapperInterface_PostCard_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserService_OTServerWrapperInterfaceServer).PostCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService_OTServerWrapperInterface/PostCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserService_OTServerWrapperInterfaceServer).PostCard(ctx, req.(*UserService_OTServerWrapperInterface_PostCard_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_OTServerWrapperInterface_PostUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserService_OTServerWrapperInterface_PostUser_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserService_OTServerWrapperInterfaceServer).PostUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService_OTServerWrapperInterface/PostUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserService_OTServerWrapperInterfaceServer).PostUser(ctx, req.(*UserService_OTServerWrapperInterface_PostUser_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_OTServerWrapperInterface_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserService_OTServerWrapperInterface_Register_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserService_OTServerWrapperInterfaceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService_OTServerWrapperInterface/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserService_OTServerWrapperInterfaceServer).Register(ctx, req.(*UserService_OTServerWrapperInterface_Register_Request))
	}
	return interceptor(ctx, in, info, handler)
}

// UserService_OTServerWrapperInterface_ServiceDesc is the grpc.ServiceDesc for UserService_OTServerWrapperInterface service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserService_OTServerWrapperInterface_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.UserService_OTServerWrapperInterface",
	HandlerType: (*UserService_OTServerWrapperInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Delete",
			Handler:    _UserService_OTServerWrapperInterface_Delete_Handler,
		},
		{
			MethodName: "GetAddresses",
			Handler:    _UserService_OTServerWrapperInterface_GetAddresses_Handler,
		},
		{
			MethodName: "GetCards",
			Handler:    _UserService_OTServerWrapperInterface_GetCards_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _UserService_OTServerWrapperInterface_GetUsers_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UserService_OTServerWrapperInterface_Login_Handler,
		},
		{
			MethodName: "PostAddress",
			Handler:    _UserService_OTServerWrapperInterface_PostAddress_Handler,
		},
		{
			MethodName: "PostCard",
			Handler:    _UserService_OTServerWrapperInterface_PostCard_Handler,
		},
		{
			MethodName: "PostUser",
			Handler:    _UserService_OTServerWrapperInterface_PostUser_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _UserService_OTServerWrapperInterface_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "UserService.proto",
}
