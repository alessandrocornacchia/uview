// Blueprint: Auto-generated by OT Plugin
package ot

import (
	"github.com/blueprint-uservices/blueprint/examples/dsb_hotel/workflow/hotelreservation"
	"github.com/blueprint-uservices/blueprint/runtime/core/backend"
	"context"
)

type FrontEndService_OTClientWrapperInterface interface {
	RecommendHandler(ctx context.Context, lat float64, lon float64, require string, locale string) ([]hotelreservation.HotelProfile, error)
	ReservationHandler(ctx context.Context, inDate string, outDate string, hotelId string, customerName string, username string, password string, roomNumber int64) (string, error)
	SearchHandler(ctx context.Context, customerName string, inDate string, outDate string, lat float64, lon float64, locale string) ([]hotelreservation.HotelProfile, error)
	UserHandler(ctx context.Context, username string, password string) (string, error)
	
}

type FrontEndService_OTClientWrapper struct {
	Client FrontEndService_OTServerWrapperInterface
	CollClient backend.Tracer
}

func New_FrontEndService_OTClientWrapper(ctx context.Context, client FrontEndService_OTServerWrapperInterface, coll_client backend.Tracer) (*FrontEndService_OTClientWrapper, error) {
	handler := &FrontEndService_OTClientWrapper{}
	handler.Client = client
	handler.CollClient = coll_client
	return handler, nil
}


func (handler *FrontEndService_OTClientWrapper) RecommendHandler(ctx context.Context, lat float64, lon float64, require string, locale string) (ret0 []hotelreservation.HotelProfile, err error) {
	tp, _ := handler.CollClient.GetTracerProvider(ctx)
	tr := tp.Tracer("FrontEndService_OTServerWrapperInterface")
	ctx, span := tr.Start(ctx, "RecommendHandler start")
	defer span.End()
	trace_ctx, _ := span.SpanContext().MarshalJSON()
	ret0, err = handler.Client.RecommendHandler(ctx, lat, lon, require, locale, string(trace_ctx))
	if err != nil {
		span.RecordError(err)
	}
	return
}

func (handler *FrontEndService_OTClientWrapper) ReservationHandler(ctx context.Context, inDate string, outDate string, hotelId string, customerName string, username string, password string, roomNumber int64) (ret0 string, err error) {
	tp, _ := handler.CollClient.GetTracerProvider(ctx)
	tr := tp.Tracer("FrontEndService_OTServerWrapperInterface")
	ctx, span := tr.Start(ctx, "ReservationHandler start")
	defer span.End()
	trace_ctx, _ := span.SpanContext().MarshalJSON()
	ret0, err = handler.Client.ReservationHandler(ctx, inDate, outDate, hotelId, customerName, username, password, roomNumber, string(trace_ctx))
	if err != nil {
		span.RecordError(err)
	}
	return
}

func (handler *FrontEndService_OTClientWrapper) SearchHandler(ctx context.Context, customerName string, inDate string, outDate string, lat float64, lon float64, locale string) (ret0 []hotelreservation.HotelProfile, err error) {
	tp, _ := handler.CollClient.GetTracerProvider(ctx)
	tr := tp.Tracer("FrontEndService_OTServerWrapperInterface")
	ctx, span := tr.Start(ctx, "SearchHandler start")
	defer span.End()
	trace_ctx, _ := span.SpanContext().MarshalJSON()
	ret0, err = handler.Client.SearchHandler(ctx, customerName, inDate, outDate, lat, lon, locale, string(trace_ctx))
	if err != nil {
		span.RecordError(err)
	}
	return
}

func (handler *FrontEndService_OTClientWrapper) UserHandler(ctx context.Context, username string, password string) (ret0 string, err error) {
	tp, _ := handler.CollClient.GetTracerProvider(ctx)
	tr := tp.Tracer("FrontEndService_OTServerWrapperInterface")
	ctx, span := tr.Start(ctx, "UserHandler start")
	defer span.End()
	trace_ctx, _ := span.SpanContext().MarshalJSON()
	ret0, err = handler.Client.UserHandler(ctx, username, password, string(trace_ctx))
	if err != nil {
		span.RecordError(err)
	}
	return
}

