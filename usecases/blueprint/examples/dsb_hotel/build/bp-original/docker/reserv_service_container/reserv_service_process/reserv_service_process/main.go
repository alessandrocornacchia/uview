// reserv_service_process runs the reserv_service_process Golang process.
//
// reserv_service_process is auto-generated by Blueprint's goproc plugin (goproc/goprocgen/main.go.go)
//
// Usage:
//
//   go run main.go --reserv_cache.dial_addr=value --reserv_db.dial_addr=value --jaeger.dial_addr=value --reserv_service.grpc.bind_addr=value 
//
// reserv_service_process requires the following arguments are passed:
//
//   --reserv_cache.dial_addr
//       Auto-generated by Blueprint IR node:
//       reserv_cache.dial_addr = AddressConfig()
//
//   --reserv_db.dial_addr
//       Auto-generated by Blueprint IR node:
//       reserv_db.dial_addr = AddressConfig()
//
//   --jaeger.dial_addr
//       Auto-generated by Blueprint IR node:
//       jaeger.dial_addr = AddressConfig()
//
//   --reserv_service.grpc.bind_addr
//       Auto-generated by Blueprint IR node:
//       reserv_service.grpc.bind_addr = AddressConfig()
//
// reserv_service_process will instantiate the following IR nodes:
//   reserv_service_process.stdoutmetriccollector
//   reserv_service_process.logger
//   reserv_cache.client
//   reserv_db.client
//   reserv_service
//   jaeger.client
//   reserv_service.server.ot
//   reserv_service.grpc_server
package main

import (
	"context"
	"os"

	"golang.org/x/exp/slog"
)

func main() {
	slog.Info("Running reserv_service_process")
	n, err := New_reserv_service_process("reserv_service_process").Build(context.Background())
	if err != nil {
		slog.Error(err.Error())
		os.Exit(1)
	}
	n.Await()
	slog.Info("reserv_service_process exiting")
}