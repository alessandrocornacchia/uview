// search_service_process runs the search_service_process Golang process.
//
// search_service_process is auto-generated by Blueprint's goproc plugin (goproc/goprocgen/main.go.go)
//
// Usage:
//
//   go run main.go --geo_service.grpc.dial_addr=value --jaeger.dial_addr=value --rate_service.grpc.dial_addr=value --search_service.grpc.bind_addr=value 
//
// search_service_process requires the following arguments are passed:
//
//   --geo_service.grpc.dial_addr
//       Auto-generated by Blueprint IR node:
//       geo_service.grpc.dial_addr = AddressConfig()
//
//   --jaeger.dial_addr
//       Auto-generated by Blueprint IR node:
//       jaeger.dial_addr = AddressConfig()
//
//   --rate_service.grpc.dial_addr
//       Auto-generated by Blueprint IR node:
//       rate_service.grpc.dial_addr = AddressConfig()
//
//   --search_service.grpc.bind_addr
//       Auto-generated by Blueprint IR node:
//       search_service.grpc.bind_addr = AddressConfig()
//
// search_service_process will instantiate the following IR nodes:
//   search_service_process.stdoutmetriccollector
//   search_service_process.logger
//   geo_service.grpc_client
//   jaeger.client
//   geo_service.client.ot
//   geo_service.client
//   rate_service.grpc_client
//   rate_service.client.ot
//   rate_service.client
//   search_service
//   search_service.server.ot
//   search_service.grpc_server
package main

import (
	"context"
	"os"

	"golang.org/x/exp/slog"
)

func main() {
	slog.Info("Running search_service_process")
	n, err := New_search_service_process("search_service_process").Build(context.Background())
	if err != nil {
		slog.Error(err.Error())
		os.Exit(1)
	}
	n.Await()
	slog.Info("search_service_process exiting")
}