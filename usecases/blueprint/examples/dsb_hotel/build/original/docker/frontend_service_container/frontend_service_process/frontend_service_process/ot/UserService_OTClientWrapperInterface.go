// Blueprint: Auto-generated by OT Plugin
package ot

import (
	"context"
	"github.com/blueprint-uservices/blueprint/runtime/core/backend"
)

type UserService_OTClientWrapperInterface interface {
	CheckUser(ctx context.Context, username string, password string) (bool, error)
	
}

type UserService_OTClientWrapper struct {
	Client UserService_OTServerWrapperInterface
	CollClient backend.Tracer
}

func New_UserService_OTClientWrapper(ctx context.Context, client UserService_OTServerWrapperInterface, coll_client backend.Tracer) (*UserService_OTClientWrapper, error) {
	handler := &UserService_OTClientWrapper{}
	handler.Client = client
	handler.CollClient = coll_client
	return handler, nil
}


func (handler *UserService_OTClientWrapper) CheckUser(ctx context.Context, username string, password string) (ret0 bool, err error) {
	tp, _ := handler.CollClient.GetTracerProvider(ctx)
	tr := tp.Tracer("UserService_OTServerWrapperInterface")
	ctx, span := tr.Start(ctx, "CheckUser start")
	defer span.End()
	trace_ctx, _ := span.SpanContext().MarshalJSON()
	ret0, err = handler.Client.CheckUser(ctx, username, password, string(trace_ctx))
	if err != nil {
		span.RecordError(err)
	}
	return
}

